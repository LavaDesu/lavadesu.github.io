/*
ðŸ‘‹ Hi! This file was autogenerated by tslint-to-eslint-config.
https://github.com/typescript-eslint/tslint-to-eslint-config

It represents the closest reasonable ESLint configuration to this
project's original TSLint configuration.

We recommend eventually switching this configuration to extend from
the recommended rulesets in typescript-eslint. 
https://github.com/typescript-eslint/tslint-to-eslint-config/blob/master/docs/FAQs.md

Happy linting! ðŸ’–
*/
{
    "env": {
        "browser": true,
        "es6": true
    },
    "plugins": [
        "eslint-plugin-import",
        "eslint-plugin-prefer-arrow",
        "eslint-plugin-unicorn"
    ],
    "rules": {
        "no-param-reassign": "error",
        "semi": "error",
        "arrow-body-style": "error",
        "comma-dangle": "error",
        "complexity": "error",
        "constructor-super": "error",
        "curly": [
            "error",
            "multi"
        ],
        "eqeqeq": [
            "error",
            "always"
        ],
        "import/no-default-export": "error",
        "new-parens": "error",
        "no-bitwise": "error",
        "no-caller": "error",
        "no-cond-assign": "error",
        "no-duplicate-case": "error",
        "no-duplicate-imports": "error",
        "no-invalid-this": "error",
        "no-new-func": "error",
        "no-new-wrappers": "error",
        "no-sequences": "error",
        "no-shadow": [
            "error",
            {
                "hoist": "all"
            }
        ],
        "no-trailing-spaces": "error",
        "no-unreachable": "error",
        "no-var": "error",
        "prefer-arrow/prefer-arrow-functions": "error",
        "prefer-const": "error",
        "prefer-object-spread": "error",
        "unicorn/filename-case": [
            "error",
            {
                "case": "pascalCase",
                "ignore": ["gulpfile.js"]
            }
        ]
    }
}
